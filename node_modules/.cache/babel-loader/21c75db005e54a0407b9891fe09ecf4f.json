{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\ayaul\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\ReactFinal\\\\ReactFinalProject\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import'./App.css';import Home from'./components/Home';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Header from'./components/Header';import MoviesList from'./components/MoviesList';import TVShows from'./components/TVShows';import MovieDetailed from'./components/MovieDetailed';import{useMemo,useState}from'react';import LoginPage from'./components/LoginPage';import isLoggedInContext from'./context/IsLoginContext';import SignUpPage from'./components/SignUpPage';import Favorites from'./components/Favorites';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedMovie=_useState2[0],setSelectedMovie=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLogged=_useState4[0],setLogged=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];var value=useMemo(function(){return{user:user,isLogged:isLogged,setLogged:setLogged};},[isLogged,user]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(isLoggedInContext.Provider,{value:value,children:/*#__PURE__*/_jsx(Header,{value:value})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",element:/*#__PURE__*/_jsx(MoviesList,{setSelectedMovie:setSelectedMovie})}),/*#__PURE__*/_jsx(Route,{path:\"/movies/:movie\",element:/*#__PURE__*/_jsx(MovieDetailed,{movie:selectedMovie})}),/*#__PURE__*/_jsx(Route,{path:\"/tvshows\",element:/*#__PURE__*/_jsx(TVShows,{})}),/*#__PURE__*/_jsx(Route,{path:\"/favorites\",element:/*#__PURE__*/_jsx(Favorites,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:!isLogged?/*#__PURE__*/_jsx(LoginPage,{setUser:setUser,setLogged:setLogged}):/*#__PURE__*/_jsx(Home,{isLogged:isLogged})}),/*#__PURE__*/_jsx(Route,{path:\"/sign-up\",element:!isLogged?/*#__PURE__*/_jsx(SignUpPage,{setLogged:setLogged,setUser:setUser}):/*#__PURE__*/_jsx(Home,{isLogged:isLogged})})]})]})});}export default App;","map":{"version":3,"sources":["C:/Users/ayaul/OneDrive/Документы/ReactFinal/ReactFinalProject/src/App.js"],"names":["Home","BrowserRouter","Router","Route","Routes","Header","MoviesList","TVShows","MovieDetailed","useMemo","useState","LoginPage","isLoggedInContext","SignUpPage","Favorites","App","selectedMovie","setSelectedMovie","isLogged","setLogged","user","setUser","value"],"mappings":"6MAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0BAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0CL,QAAQ,EAAlD,wCAAOM,aAAP,eAAsBC,gBAAtB,eACA,eAA8BP,QAAQ,CAAC,KAAD,CAAtC,yCAAOQ,QAAP,eAAiBC,SAAjB,eACA,eAAwBT,QAAQ,EAAhC,yCAAOU,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,KAAK,CAAGb,OAAO,CAAC,iBAAO,CAACW,IAAI,CAAJA,IAAD,CAAOF,QAAQ,CAARA,QAAP,CAAiBC,SAAS,CAATA,SAAjB,CAAP,EAAD,CAAsC,CAACD,QAAD,CAAWE,IAAX,CAAtC,CAArB,CAEA,mBACE,KAAC,MAAD,wBACE,aAAK,SAAS,CAAC,KAAf,wBACA,KAAC,iBAAD,CAAmB,QAAnB,EAA4B,KAAK,CAAEE,KAAnC,uBACE,KAAC,MAAD,EAAQ,KAAK,CAAIA,KAAjB,EADF,EADA,cAKE,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAC,EAAZ,CAAe,OAAO,cAAE,KAAC,IAAD,IAAxB,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,OAAO,cAAE,KAAC,UAAD,EAAY,gBAAgB,CAAIL,gBAAhC,EAA/B,EAFJ,cAII,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,OAAO,cAAE,KAAC,aAAD,EAAe,KAAK,CAAID,aAAxB,EAAtC,EAJJ,cAKI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,OAAD,IAAhC,EALJ,cAMI,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,OAAO,cAAE,KAAC,SAAD,IAAlC,EANJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,CAAE,CAACE,QAAD,cAAY,KAAC,SAAD,EAAW,OAAO,CAAIG,OAAtB,CAA+B,SAAS,CAAIF,SAA5C,EAAZ,cAAuE,KAAC,IAAD,EAAM,QAAQ,CAAID,QAAlB,EAArG,EAPJ,cAQI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,CAAI,CAACA,QAAD,cAAY,KAAC,UAAD,EAAY,SAAS,CAAIC,SAAzB,CAAoC,OAAO,CAAIE,OAA/C,EAAZ,cAAwE,KAAC,IAAD,EAAM,QAAQ,CAAIH,QAAlB,EAA1G,EARJ,GALF,GADF,EADF,CAoBD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import './App.css';\r\nimport Home from './components/Home';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport MoviesList from './components/MoviesList';\r\nimport TVShows from './components/TVShows';\r\nimport MovieDetailed from './components/MovieDetailed';\r\nimport { useMemo, useState } from 'react';\r\nimport LoginPage from './components/LoginPage';\r\nimport isLoggedInContext from './context/IsLoginContext';\r\nimport SignUpPage from './components/SignUpPage';\r\nimport Favorites from './components/Favorites';\r\n\r\nfunction App() {\r\n  const [selectedMovie, setSelectedMovie] = useState();\r\n  const [isLogged, setLogged] = useState(false);\r\n  const [user, setUser] = useState();\r\n  const value = useMemo(() => ({user, isLogged, setLogged}), [isLogged, user]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      <isLoggedInContext.Provider value={value}>\r\n        <Header value = {value}/>\r\n      </isLoggedInContext.Provider>\r\n\r\n        <Routes>\r\n            <Route path='' element={<Home />}></Route>\r\n            <Route path=\"/movies\" element={<MoviesList setSelectedMovie = {setSelectedMovie}/>}>\r\n            </Route>\r\n            <Route path=\"/movies/:movie\" element={<MovieDetailed movie = {selectedMovie}/>}/>\r\n            <Route path=\"/tvshows\" element={<TVShows/>}></Route>\r\n            <Route path=\"/favorites\" element={<Favorites/>}></Route>\r\n            <Route path=\"/login\" element={!isLogged ? <LoginPage setUser = {setUser} setLogged = {setLogged}/> : <Home isLogged = {isLogged}/>}></Route>\r\n            <Route path=\"/sign-up\" element = {!isLogged ? <SignUpPage setLogged = {setLogged} setUser = {setUser}/> : <Home isLogged = {isLogged}/>}></Route>\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}