{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\ayaul\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\ReactFinal\\\\ReactFinalProject\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\ayaul\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\ReactFinal\\\\ReactFinalProject\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\ayaul\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\ReactFinal\\\\ReactFinalProject\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import api_key from'../Key';import TVShow from\"./TVShow\";import Loader from\"./Loader\";import AlertMessage from\"./AlertMessage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TVShows(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tvShows=_useState2[0],setTvShows=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchedText=_useState4[0],setSearchedText=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setLoading=_useState6[1];useEffect(function(){return getTvShows();},[]);function getTvShows(){return _getTvShows.apply(this,arguments);}function _getTvShows(){_getTvShows=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://api.themoviedb.org/3/tv/popular/',{params:{api_key:api_key,page:\"1\"}}).then(function(response){setTvShows(response.data.results);setLoading(false);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _getTvShows.apply(this,arguments);};function onSearch(){return _onSearch.apply(this,arguments);}function _onSearch(){_onSearch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('https://api.themoviedb.org/3/search/tv',{params:{api_key:api_key,page:\"1\",query:searchedText}}).then(function(response){setTvShows(response.data.results);setLoading(false);}).catch(function(error){setLoading(false);setTvShows([]);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _onSearch.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"tv-shows\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search\",children:/*#__PURE__*/_jsx(\"input\",{className:\"search__input\",onChange:function onChange(e){setLoading(true);setSearchedText(e.target.value);onSearch();},placeholder:\"Search for...\"})}),isLoading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(\"div\",{children:tvShows.length!=0?tvShows.map(function(tvShow1){return/*#__PURE__*/_jsx(TVShow,{tvShow:tvShow1});}):/*#__PURE__*/_jsx(AlertMessage,{primaryText:\"Not Found\",secondaryText:\"Try to search for something else.\"})})]});}","map":{"version":3,"sources":["C:/Users/ayaul/OneDrive/Документы/ReactFinal/ReactFinalProject/src/components/TVShows.js"],"names":["axios","useEffect","useState","api_key","TVShow","Loader","AlertMessage","TVShows","tvShows","setTvShows","searchedText","setSearchedText","isLoading","setLoading","getTvShows","get","params","page","then","response","data","results","onSearch","query","catch","error","e","target","value","length","map","tvShow1"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,QAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAEA,cAAe,SAASC,CAAAA,OAAT,EAAmB,CAC9B,cAA8BL,QAAQ,CAAC,EAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eACA,eAAwCP,QAAQ,CAAC,EAAD,CAAhD,yCAAOQ,YAAP,eAAqBC,eAArB,eACA,eAAgCT,QAAQ,CAAC,IAAD,CAAxC,yCAAOU,SAAP,eAAkBC,UAAlB,eAEAZ,SAAS,CAAC,iBAAMa,CAAAA,UAAU,EAAhB,EAAD,CAAqB,EAArB,CAAT,CAL8B,QAOfA,CAAAA,UAPe,wIAO9B,yJACUd,CAAAA,KAAK,CAACe,GAAN,CAAU,0CAAV,CAAsD,CACxDC,MAAM,CAAE,CAAEb,OAAO,CAAEA,OAAX,CAAoBc,IAAI,CAAE,GAA1B,CADgD,CAAtD,EAGDC,IAHC,CAGI,SAACC,QAAD,CAAc,CAChBV,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAV,CACAR,UAAU,CAAC,KAAD,CAAV,CACH,CANC,CADV,uDAP8B,6CAe7B,CAf6B,QAiBfS,CAAAA,QAjBe,kIAiB9B,+JACUtB,CAAAA,KAAK,CAACe,GAAN,CAAU,wCAAV,CAAoD,CACtDC,MAAM,CAAE,CAAEb,OAAO,CAAEA,OAAX,CAAoBc,IAAI,CAAE,GAA1B,CAA+BM,KAAK,CAAEb,YAAtC,CAD8C,CAApD,EAGDQ,IAHC,CAGI,SAACC,QAAD,CAAc,CAChBV,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAV,CACAR,UAAU,CAAC,KAAD,CAAV,CACH,CANC,EAODW,KAPC,CAOK,SAAAC,KAAK,CAAI,CACZZ,UAAU,CAAC,KAAD,CAAV,CACAJ,UAAU,CAAC,EAAD,CAAV,CACH,CAVC,CADV,yDAjB8B,2CA+B9B,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,YAAK,SAAS,CAAC,QAAf,uBACI,cAAO,SAAS,CAAC,eAAjB,CAAiC,QAAQ,CAAE,kBAACiB,CAAD,CAAO,CAC9Cb,UAAU,CAAC,IAAD,CAAV,CACAF,eAAe,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,CACAN,QAAQ,GACX,CAJD,CAIG,WAAW,CAAC,eAJf,EADJ,EADJ,CAQKV,SAAS,cAAG,KAAC,MAAD,IAAH,cACN,qBAEQJ,OAAO,CAACqB,MAAR,EAAkB,CAAlB,CACKrB,OAAD,CAAUsB,GAAV,CAAc,SAACC,OAAD,qBACV,KAAC,MAAD,EAAQ,MAAM,CAAEA,OAAhB,EADU,EAAd,CADJ,cAGQ,KAAC,YAAD,EACA,WAAW,CAAC,WADZ,CAEA,aAAa,CAAC,mCAFd,EALhB,EATR,GADJ,CAwBH","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api_key from '../Key';\r\nimport TVShow from \"./TVShow\";\r\nimport Loader from \"./Loader\"\r\nimport AlertMessage from \"./AlertMessage\";\r\n\r\nexport default function TVShows() {\r\n    const [tvShows, setTvShows] = useState([])\r\n    const [searchedText, setSearchedText] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => getTvShows(), []);\r\n\r\n    async function getTvShows() {\r\n        await axios.get('https://api.themoviedb.org/3/tv/popular/', {\r\n            params: { api_key: api_key, page: \"1\" },\r\n        })\r\n            .then((response) => {\r\n                setTvShows(response.data.results);\r\n                setLoading(false)\r\n            });\r\n    };\r\n\r\n    async function onSearch() {\r\n        await axios.get('https://api.themoviedb.org/3/search/tv', {\r\n            params: { api_key: api_key, page: \"1\", query: searchedText },\r\n        })\r\n            .then((response) => {\r\n                setTvShows(response.data.results);\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                setTvShows([]);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"tv-shows\">\r\n            <div className='search'>\r\n                <input className='search__input' onChange={(e) => {\r\n                    setLoading(true)\r\n                    setSearchedText(e.target.value);\r\n                    onSearch()\r\n                }} placeholder=\"Search for...\" />\r\n            </div>\r\n            {isLoading ? <Loader /> :\r\n                <div>\r\n                    {\r\n                        tvShows.length != 0 ?\r\n                            (tvShows).map((tvShow1) =>\r\n                                <TVShow tvShow={tvShow1} />\r\n                            ) : <AlertMessage\r\n                                primaryText=\"Not Found\"\r\n                                secondaryText=\"Try to search for something else.\"\r\n                            />\r\n                    }\r\n                </div>}\r\n        </div>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}